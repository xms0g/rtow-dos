#include "color.h"
#include <float.h>
#include "math.h"

#define D(n) ((double)n)

static const double ndx_vgapal[256][3] = {
    /* colors 0-15 */
    {D(0x00), D(0x00), D(0x00)},

    {D(0x00), D(0x00), D(0xAA)},
    {D(0x00), D(0xAA), D(0x00)},
    {D(0x00), D(0xAA), D(0xAA)},
    {D(0xAA), D(0x00), D(0x00)},
    {D(0xAA), D(0x00), D(0xAA)},

    {D(0xAA), D(0x55), D(0x00)},
    {D(0xAA), D(0xAA), D(0xAA)},
    {D(0x55), D(0x55), D(0x55)},
    {D(0x55), D(0x55), D(0xFF)},
    {D(0x55), D(0xFF), D(0x55)},

    {D(0x55), D(0xFF), D(0xFF)},
    {D(0xFF), D(0x55), D(0x55)},
    {D(0xFF), D(0x55), D(0xFF)},
    {D(0xFF), D(0xFF), D(0x55)},
    {D(0xFF), D(0xFF), D(0xFF)},

    /* grayscale 16-31 (non gamma corrected) */
    {D(0x00), D(0x00), D(0x00)},
    {D(0x14), D(0x14), D(0x14)},
    {D(0x20), D(0x20), D(0x20)},
    {D(0x2C), D(0x2C), D(0x2C)},
    {D(0x38), D(0x38), D(0x38)},

    {D(0x45), D(0x45), D(0x45)},
    {D(0x51), D(0x51), D(0x51)},
    {D(0x61), D(0x61), D(0x61)},
    {D(0x71), D(0x71), D(0x71)},
    {D(0x82), D(0x82), D(0x82)},

    {D(0x92), D(0x92), D(0x92)},
    {D(0xA2), D(0xA2), D(0xA2)},
    {D(0xB6), D(0xB6), D(0xB6)},
    {D(0xCB), D(0xCB), D(0xCB)},
    {D(0xE3), D(0xE3), D(0xE3)},

    {D(0xFF), D(0xFF), D(0xFF)},
    // HERE ------> 1
    /* hue mix 32-55 (1) */
    {D(0x00), D(0x00), D(0xFF)},
    {D(0x41), D(0x00), D(0xFF)},
    {D(0x7D), D(0x00), D(0xFF)},
    {D(0xBE), D(0x00), D(0xFF)},

    {D(0xFF), D(0x00), D(0xFF)},
    {D(0xFF), D(0x00), D(0xBE)},
    {D(0xFF), D(0x00), D(0x7D)},
    {D(0xFF), D(0x00), D(0x41)},
    {D(0xFF), D(0x00), D(0x00)},

    {D(0xFF), D(0x41), D(0x00)},
    {D(0xFF), D(0x7D), D(0x00)},
    {D(0xFF), D(0xBE), D(0x00)},
    {D(0xFF), D(0xFF), D(0x00)},
    {D(0xBE), D(0xFF), D(0x00)},

    {D(0x7D), D(0xFF), D(0x00)},
    {D(0x41), D(0xFF), D(0x00)},
    {D(0x00), D(0xFF), D(0x00)},
    {D(0x00), D(0xFF), D(0x41)},
    {D(0x00), D(0xFF), D(0x7D)},

    {D(0x00), D(0xFF), D(0xBE)},
    {D(0x00), D(0xFF), D(0xFF)},
    {D(0x00), D(0xBE), D(0xFF)},
    {D(0x00), D(0x7D), D(0xFF)},
    {D(0x00), D(0x41), D(0xFF)},

    /* hue mix 56-79 (2) */
    {D(0x7D), D(0x7D), D(0xFF)},
    {D(0x9E), D(0x7D), D(0xFF)},
    {D(0xBE), D(0x7D), D(0xFF)},
    {D(0xDF), D(0x7D), D(0xFF)},
    {D(0xFF), D(0x7D), D(0xFF)},

    {D(0xFF), D(0x7D), D(0xDF)},
    {D(0xFF), D(0x7D), D(0xBE)},
    {D(0xFF), D(0x7D), D(0x9E)},
    {D(0xFF), D(0x7D), D(0x7D)},
    {D(0xFF), D(0x9E), D(0x7D)},

    {D(0xFF), D(0xBE), D(0x7D)},
    {D(0xFF), D(0xDF), D(0x7D)},
    {D(0xFF), D(0xFF), D(0x7D)},
    {D(0xDF), D(0xFF), D(0x7D)},
    {D(0xBE), D(0xFF), D(0x7D)},

    {D(0x9E), D(0xFF), D(0x7D)},
    {D(0x7D), D(0xFF), D(0x7D)},
    {D(0x7D), D(0xFF), D(0x9E)},
    {D(0x7D), D(0xFF), D(0xBE)},
    {D(0x7D), D(0xFF), D(0xDF)},

    {D(0x7D), D(0xFF), D(0xFF)},
    {D(0x7D), D(0xDF), D(0xFF)},
    {D(0x7D), D(0xBE), D(0xFF)},
    {D(0x7D), D(0x9E), D(0xFF)},
    /* hue mix 80-103 (3) */
    {D(0xB6), D(0xB6), D(0xFF)},

    {D(0xC7), D(0xB6), D(0xFF)},
    {D(0xDB), D(0xB6), D(0xFF)},
    {D(0xEB), D(0xB6), D(0xFF)},
    {D(0xFF), D(0xB6), D(0xFF)},
    {D(0xFF), D(0xB6), D(0xEB)},

    {D(0xFF), D(0xB6), D(0xDB)},
    {D(0xFF), D(0xB6), D(0xC7)},
    {D(0xFF), D(0xB6), D(0xB6)},
    {D(0xFF), D(0xC7), D(0xB6)},
    {D(0xFF), D(0xDB), D(0xB6)},

    {D(0xFF), D(0xEB), D(0xB6)},
    {D(0xFF), D(0xFF), D(0xB6)},
    {D(0xEB), D(0xFF), D(0xB6)},
    {D(0xDB), D(0xFF), D(0xB6)},
    {D(0xC7), D(0xFF), D(0xB6)},

    {D(0xB6), D(0xFF), D(0xB6)},
    {D(0xB6), D(0xFF), D(0xC7)},
    {D(0xB6), D(0xFF), D(0xDB)},
    {D(0xB6), D(0xFF), D(0xEB)},
    {D(0xB6), D(0xFF), D(0xFF)},

    {D(0xB6), D(0xEB), D(0xFF)},
    {D(0xB6), D(0xDB), D(0xFF)},
    {D(0xB6), D(0xC7), D(0xFF)},
    // HERE ------> 2
    /* hue mix 104-127 (4) dark 1 */
    {D(0x00), D(0x00), D(0x71)},
    {D(0x1C), D(0x00), D(0x71)},
    {D(0x38), D(0x00), D(0x71)},
    {D(0x55), D(0x00), D(0x71)},

    {D(0x71), D(0x00), D(0x71)},
    {D(0x71), D(0x00), D(0x55)},
    {D(0x71), D(0x00), D(0x38)},
    {D(0x71), D(0x00), D(0x1C)},
    {D(0x71), D(0x00), D(0x00)},

    {D(0x71), D(0x1C), D(0x00)},
    {D(0x71), D(0x38), D(0x00)},
    {D(0x71), D(0x55), D(0x00)},
    {D(0x71), D(0x71), D(0x00)},
    {D(0x55), D(0x71), D(0x00)},

    {D(0x38), D(0x71), D(0x00)},
    {D(0x1C), D(0x71), D(0x00)},
    {D(0x00), D(0x71), D(0x00)},
    {D(0x00), D(0x71), D(0x1C)},
    {D(0x00), D(0x71), D(0x38)},

    {D(0x00), D(0x71), D(0x55)},
    {D(0x00), D(0x71), D(0x71)},
    {D(0x00), D(0x55), D(0x71)},
    {D(0x00), D(0x38), D(0x71)},
    {D(0x00), D(0x1C), D(0x71)},

    /* hue mix 56-79 (2) */
    {D(0x38), D(0x38), D(0x71)},
    {D(0x45), D(0x38), D(0x71)},
    {D(0x55), D(0x38), D(0x71)},
    {D(0x61), D(0x38), D(0x71)},
    {D(0x71), D(0x38), D(0x71)},

    {D(0x71), D(0x38), D(0x61)},
    {D(0x71), D(0x38), D(0x55)},
    {D(0x71), D(0x38), D(0x45)},
    {D(0x71), D(0x38), D(0x38)},
    {D(0x71), D(0x45), D(0x38)},

    {D(0x71), D(0x55), D(0x38)},
    {D(0x71), D(0x61), D(0x38)},
    {D(0x71), D(0x71), D(0x38)},
    {D(0x61), D(0x71), D(0x38)},
    {D(0x55), D(0x71), D(0x38)},

    {D(0x45), D(0x71), D(0x38)},
    {D(0x38), D(0x71), D(0x38)},
    {D(0x38), D(0x71), D(0x45)},
    {D(0x38), D(0x71), D(0x55)},
    {D(0x38), D(0x71), D(0x61)},

    {D(0x38), D(0x71), D(0x71)},
    {D(0x38), D(0x61), D(0x71)},
    {D(0x38), D(0x55), D(0x71)},
    {D(0x38), D(0x45), D(0x71)},
    /* hue mix 80-103 (3) */
    {D(0x51), D(0x51), D(0x71)},

    {D(0x59), D(0x51), D(0x71)},
    {D(0x61), D(0x51), D(0x71)},
    {D(0x69), D(0x51), D(0x71)},
    {D(0x71), D(0x51), D(0x71)},
    {D(0x71), D(0x51), D(0x69)},

    {D(0x71), D(0x51), D(0x61)},
    {D(0x71), D(0x51), D(0x59)},
    {D(0x71), D(0x51), D(0x51)},
    {D(0x71), D(0x59), D(0x51)},
    {D(0x71), D(0x61), D(0x51)},

    {D(0x71), D(0x69), D(0x51)},
    {D(0x71), D(0x71), D(0x51)},
    {D(0x69), D(0x71), D(0x51)},
    {D(0x61), D(0x71), D(0x51)},
    {D(0x59), D(0x71), D(0x51)},

    {D(0x51), D(0x71), D(0x51)},
    {D(0x51), D(0x71), D(0x59)},
    {D(0x51), D(0x71), D(0x61)},
    {D(0x51), D(0x71), D(0x69)},
    {D(0x51), D(0x71), D(0x71)},

    {D(0x51), D(0x69), D(0x71)},
    {D(0x51), D(0x61), D(0x71)},
    {D(0x51), D(0x59), D(0x71)},
    // HERE ------> 3
    /* hue mix 104-127 (4) dark 1 */
    {D(0x00), D(0x00), D(0x41)},
    {D(0x10), D(0x00), D(0x41)},
    {D(0x20), D(0x00), D(0x41)},
    {D(0x30), D(0x00), D(0x41)},

    {D(0x41), D(0x00), D(0x41)},
    {D(0x41), D(0x00), D(0x30)},
    {D(0x41), D(0x00), D(0x20)},
    {D(0x41), D(0x00), D(0x10)},
    {D(0x41), D(0x00), D(0x00)},

    {D(0x41), D(0x10), D(0x00)},
    {D(0x41), D(0x20), D(0x00)},
    {D(0x41), D(0x30), D(0x00)},
    {D(0x41), D(0x41), D(0x00)},
    {D(0x30), D(0x41), D(0x00)},

    {D(0x20), D(0x41), D(0x00)},
    {D(0x10), D(0x41), D(0x00)},
    {D(0x00), D(0x41), D(0x00)},
    {D(0x00), D(0x41), D(0x10)},
    {D(0x00), D(0x41), D(0x20)},

    {D(0x00), D(0x41), D(0x30)},
    {D(0x00), D(0x41), D(0x41)},
    {D(0x00), D(0x30), D(0x41)},
    {D(0x00), D(0x20), D(0x41)},
    {D(0x00), D(0x10), D(0x41)},

    /* hue mix 56-79 (2) */
    {D(0x20), D(0x20), D(0x41)},
    {D(0x28), D(0x20), D(0x41)},
    {D(0x30), D(0x20), D(0x41)},
    {D(0x3C), D(0x20), D(0x41)},
    {D(0x41), D(0x20), D(0x41)},

    {D(0x41), D(0x20), D(0x3C)},
    {D(0x41), D(0x20), D(0x30)},
    {D(0x41), D(0x20), D(0x28)},
    {D(0x41), D(0x20), D(0x20)},
    {D(0x41), D(0x28), D(0x20)},

    {D(0x41), D(0x30), D(0x20)},
    {D(0x41), D(0x3C), D(0x20)},
    {D(0x41), D(0x41), D(0x20)},
    {D(0x3C), D(0x41), D(0x20)},
    {D(0x30), D(0x41), D(0x20)},

    {D(0x28), D(0x41), D(0x20)},
    {D(0x20), D(0x41), D(0x20)},
    {D(0x20), D(0x41), D(0x28)},
    {D(0x20), D(0x41), D(0x30)},
    {D(0x20), D(0x41), D(0x3C)},

    {D(0x20), D(0x41), D(0x41)},
    {D(0x20), D(0x3C), D(0x41)},
    {D(0x20), D(0x30), D(0x41)},
    {D(0x20), D(0x28), D(0x41)},
    /* hue mix 80-103 (3) */
    {D(0x2C), D(0x2C), D(0x41)},

    {D(0x30), D(0x2C), D(0x41)},
    {D(0x34), D(0x2C), D(0x41)},
    {D(0x3C), D(0x2C), D(0x41)},
    {D(0x41), D(0x2C), D(0x41)},
    {D(0x41), D(0x2C), D(0x3C)},

    {D(0x41), D(0x2C), D(0x34)},
    {D(0x41), D(0x2C), D(0x30)},
    {D(0x41), D(0x2C), D(0x2C)},
    {D(0x41), D(0x30), D(0x2C)},
    {D(0x41), D(0x34), D(0x2C)},

    {D(0x41), D(0x3C), D(0x2C)},
    {D(0x41), D(0x41), D(0x2C)},
    {D(0x3C), D(0x41), D(0x2C)},
    {D(0x34), D(0x41), D(0x2C)},
    {D(0x30), D(0x41), D(0x2C)},

    {D(0x2C), D(0x41), D(0x2C)},
    {D(0x2C), D(0x41), D(0x30)},
    {D(0x2C), D(0x41), D(0x34)},
    {D(0x2C), D(0x41), D(0x3C)},
    {D(0x2C), D(0x41), D(0x41)},

    {D(0x2C), D(0x3C), D(0x41)},
    {D(0x2C), D(0x34), D(0x41)},
    {D(0x2C), D(0x30), D(0x41)},

    /* all black */
    {D(0), D(0), D(0)},
    {D(0), D(0), D(0)},
    {D(0), D(0), D(0)},
    {D(0), D(0), D(0)},

    {D(0), D(0), D(0)},
    {D(0), D(0), D(0)},
    {D(0), D(0), D(0)},
    {D(0), D(0), D(0)},
};

unsigned char rgb2vga(int r, int g, int b) {
  	double rf = (double)r;
    double gf = (double)g;
    double bf = (double)b;

  	double closest = DBL_MAX;
  	int index = 0;
 
  	for (int i = 0; i < 248; i++) {
		const double* sample = ndx_vgapal[i];
		double rs = sample[0];
		double gs = sample[1];
		double bs = sample[2];
		double dst = sqrt(pow(rs - rf, 2.0) + pow(gs - gf, 2.0) + pow(bs - bf, 2.0));
    	
		if (closest > dst) {
        	closest = dst;
        	index = i;
      	} else if (dst < 0.05) {
        	index = i;
        	break;
      	}
  	}

  	return (unsigned char)index;
}

unsigned char pixel2vga(const color& pixel) {
    double r = pixel.x;
    double g = pixel.y;
    double b = pixel.z;

	// Apply a linear to gamma transform for gamma 2
	r = linear2gamma(r);
	g = linear2gamma(g);
	b = linear2gamma(b);

    // Translate the [0,1] component values to the byte range [0,255].
    int rbyte = (int)(256 * clamp(r, 0.000, 0.999));
    int gbyte = (int)(256 * clamp(g, 0.000, 0.999));
    int bbyte = (int)(256 * clamp(b, 0.000, 0.999));

    return rgb2vga(rbyte, gbyte, bbyte);
}

double linear2gamma(double linearComponent) {
	if (linearComponent > 0)
        return sqrt(linearComponent);

    return 0;
}